#include "mbnrg_3b_A1B2_A1B2_A1B2_deg4_v2.h"

////////////////////////////////////////////////////////////////////////////////

namespace mbnrg_A1B2_A1B2_A1B2_deg4 {

mbnrg_A1B2_A1B2_A1B2_deg4_v2::mbnrg_A1B2_A1B2_A1B2_deg4_v2(const std::string mon1, const std::string mon2, const std::string mon3) {

    // =====>> BEGIN SECTION CONSTRUCTOR <<=====
    // =>> PASTE RIGHT BELOW THIS LINE <==


    //if ( std::regex_match(mon1, std::regex("^h2o_2.3a.*"))
    if ( mon1.size() >= 8 && mon1.compare(0, 5, "h2o_2") == 0 && mon1.compare(6, 2, "3a") == 0
         and  mon1 == mon2
         and  mon1 == mon3 ) {
        coefficients = std::vector<double> {
            -1.086960669052707e-03, // 0
             5.608454763639523e-01, // 1
             4.405996320472178e-03, // 2
             1.180840552309213e+01, // 3
            -2.826684554463545e+02, // 4
             1.649505550342195e+01, // 5
            -2.135952417509254e+02, // 6
             3.671834207474127e+00, // 7
            -2.709161345812054e+02, // 8
            -6.998402939479728e+00, // 9
             7.110007472328472e+01, // 10
             6.073189147674228e+02, // 11
             2.515479133666614e+02, // 12
             2.308070976222883e+02, // 13
             8.529394740832268e+01, // 14
            -2.846066089461246e+01, // 15
             7.585335615733006e-03, // 16
            -2.572362451813744e-01, // 17
             1.064415265773534e-03, // 18
            -8.361140273246100e+01, // 19
            -6.206795318790365e+01, // 20
            -1.093471932979054e-06, // 21
            -8.382579358499444e+01, // 22
            -3.909442216768913e-04, // 23
            -2.880453667850343e-04, // 24
            -2.659347874889468e+01, // 25
            -4.654478302269140e-01, // 26
             6.506301762194435e+01, // 27
            -1.144512582392849e+01, // 28
            -1.245343581581431e-03, // 29
            -1.531627258462343e+02, // 30
            -4.195778896791149e-03, // 31
             1.108117961905139e+02, // 32
            -1.482994563590057e-01, // 33
             1.378351482654556e-07, // 34
             7.096974483155208e-07, // 35
             1.837739852524818e+00, // 36
             5.691989444256223e-03, // 37
            -5.785198852067087e-03, // 38
            -1.841489235998129e-03, // 39
             3.352784603865637e+01, // 40
            -2.364908830238812e-01, // 41
            -9.312775988649582e-01, // 42
             1.791012246892884e+00, // 43
            -7.194604396405623e-07, // 44
            -2.857785998910841e-03, // 45
            -5.835003488586527e-02, // 46
            -7.158454138380633e+01, // 47
            -2.438206792525138e-03, // 48
             6.216064996429475e+01, // 49
            -6.507597007018668e+01, // 50
             6.753989935073207e+01, // 51
             2.076169015067879e-03, // 52
            -6.668754656007215e-08, // 53
            -5.431043859687008e+01, // 54
            -5.938034579227705e-01, // 55
            -2.261445071378935e+01, // 56
            -1.104140148316432e-01, // 57
            -1.340882531901523e-04, // 58
             7.730325074857773e-02, // 59
            -3.925530849309143e-02, // 60
            -9.172436473454830e-03, // 61
            -8.028565920735504e-07, // 62
             1.775476044095654e-06, // 63
            -7.419133027455511e-01, // 64
            -5.545982337107402e+00, // 65
             3.028154259251055e+00, // 66
             6.349600290567848e+01, // 67
             9.896264342217798e+01, // 68
             2.461192484791977e-07, // 69
             6.146344152932651e+01, // 70
            -2.696650051074106e-01, // 71
             1.363571567161411e-04, // 72
             4.085366912905908e-03, // 73
             9.381486211301865e+01, // 74
             3.318865003419209e-01, // 75
             1.018087310397501e+00, // 76
             4.406119774741604e+01, // 77
            -4.575614624868217e-01, // 78
             3.877929574758813e-07, // 79
             7.651853014071116e-01, // 80
             2.509611395697714e+00, // 81
            -4.611500758362521e+00, // 82
             3.498875215252928e+00, // 83
             8.144297798608541e+01, // 84
             5.665320710749553e-01, // 85
             6.251439730703410e-04, // 86
             2.250827950045524e-04, // 87
            -1.589841963983088e+00, // 88
            -6.881359078517604e-08, // 89
            -5.276618664282425e-03, // 90
            -2.659832983030311e-01, // 91
             3.967076201986547e-03, // 92
            -2.008693322070100e-01, // 93
            -8.433693927316744e-01, // 94
            -7.865763546205654e-02, // 95
            -1.811968712252143e+00, // 96
             1.564861389200531e-02, // 97
             5.603678158223185e-02, // 98
             5.690176375100431e+01, // 99
             6.673408672717225e-02, // 100
            -8.030806531477800e-01, // 101
            -2.037428091465991e+02, // 102
            -2.173419290178643e+00, // 103
             2.424206420187956e+01, // 104
            -5.771583218516229e-08, // 105
             2.471376412826771e-07, // 106
             2.394575870801892e-06, // 107
            -2.118081452813995e+02, // 108
             2.900154896365976e+00, // 109
             2.566716161552287e-06, // 110
             1.252145884414198e+00, // 111
             2.151637655519531e-01, // 112
             5.749775837366025e+00, // 113
            -1.041203544113863e-02, // 114
            -1.707922340412452e-08, // 115
             7.355749740683545e-03, // 116
            -1.031109336960317e-01, // 117
            -2.318207330559698e-05, // 118
             1.489446266593963e-02, // 119
             5.238757404622528e-05, // 120
            -2.577152312387792e-07, // 121
            -1.333949064885005e-06, // 122
             4.424260097803024e-04, // 123
             2.034744474687575e-03, // 124
            -2.155038895935814e+01, // 125
             1.734493958299469e-06, // 126
             1.380339329701823e+01, // 127
            -9.334467677702168e-07, // 128
            -2.353800201657141e-03, // 129
            -2.128947096219535e+00, // 130
            -2.816055725906168e-06, // 131
            -4.914776496792013e-04, // 132
             2.753557692879184e+00, // 133
             5.069929478602646e-04, // 134
             2.175784451595954e+00, // 135
             1.061342195899497e+02, // 136
            -1.402898904343898e-03, // 137
            -2.177081535637322e-08, // 138
            -1.981737197546964e-03, // 139
            -8.924619235400677e+01, // 140
             1.079728420058435e-06, // 141
            -6.567447622901088e+01, // 142
             6.371252915780168e-01, // 143
             5.583016629153198e-03, // 144
            -9.230906563910412e-03, // 145
            -1.320602556219490e+01, // 146
             2.417574313413910e-03, // 147
             8.092211090421796e-06, // 148
             2.562354523684707e-03, // 149
             9.597168340054399e+02, // 150
             1.213147800543393e-06, // 151
            -4.877794644872115e-04, // 152
            -8.190222708722338e-04, // 153
             3.882671205173528e-02, // 154
             4.627747444881050e-01, // 155
            -1.100197882491026e-03, // 156
            -6.373034241043499e+01, // 157
             3.150249564750246e+01, // 158
            -8.316220474901038e-01, // 159
            -4.198583258748902e-01, // 160
             8.183115343275886e-03, // 161
            -1.191773442066941e+00, // 162
            -3.042775052763065e+01, // 163
             1.999721779365687e+00, // 164
            -1.071699991591882e+00, // 165
             2.469104509021001e+00, // 166
            -7.730767876282640e+00, // 167
            -5.567139405416791e+01, // 168
            -8.679469749971884e-02, // 169
            -2.077228008253553e+00, // 170
             1.821112248585421e-01, // 171
            -4.529335778320273e+01, // 172
            -1.706270241860410e-07, // 173
             3.341499725271061e-06, // 174
            -3.613845822780442e-03, // 175
             2.166050470636056e-01, // 176
             8.630615812167465e-01, // 177
            -1.111541971779815e-01, // 178
             3.540632333821874e-08, // 179
            -4.256030942328294e+00, // 180
             1.815458194511553e+02, // 181
            -3.448686683002179e-03, // 182
            -1.696567149984461e+02, // 183
             2.489535299987296e-03, // 184
            -2.545987332793933e-03, // 185
             4.628752025304539e+01, // 186
             6.548875403310011e-07, // 187
            -2.459501806523937e-03, // 188
             9.695714103763013e+00, // 189
            -3.287693459826983e+01, // 190
            -2.611505354689579e-01, // 191
            -2.320871786119186e-06, // 192
            -3.583830280803348e+01, // 193
            -2.222803256447332e+01, // 194
            -1.515385029355831e+00, // 195
            -4.232800620714587e-03, // 196
             2.020190961723271e-08, // 197
            -6.823336280824193e-07, // 198
            -3.335938259195401e-08, // 199
            -6.786772586239139e+00, // 200
             1.825585986072439e+01, // 201
            -2.901962099529777e+00, // 202
            -4.646107027955820e-06, // 203
             3.014764832671643e-02, // 204
             1.113405545651472e+02, // 205
            -1.653394981395791e+00, // 206
            -1.232275042852081e-07, // 207
             5.899556487477552e-02, // 208
             4.926276572116676e-02, // 209
             2.034289234215993e+00, // 210
             1.484047817785288e-06, // 211
             3.940911229218966e-06, // 212
             2.070561627315213e-01, // 213
            -2.277236247149168e-02, // 214
             1.811797560609580e-03, // 215
            -4.743017222329284e-03, // 216
            -2.254221567152781e-02, // 217
            -2.168899061642750e-07, // 218
             1.416639111688675e-02, // 219
             1.074820426236893e-06, // 220
             1.912690056041074e-02, // 221
            -2.578704847404645e-03, // 222
            -7.948021863147883e-03, // 223
             3.253172869087855e-01, // 224
            -6.090429506774311e-03, // 225
             5.264104371485343e-05, // 226
            -1.373587498886036e-03, // 227
            -7.847615090282632e-07, // 228
            -2.008433444695406e-06, // 229
            -6.478078662742521e-07, // 230
             1.043984527603846e-03, // 231
            -3.966130745891716e-02, // 232
             7.610223254689655e+00, // 233
            -2.307467058943071e-01, // 234
            -9.775753640891714e-04, // 235
            -7.214763002424783e-03, // 236
             1.149122174951733e-03, // 237
             1.795675110778547e-01, // 238
             8.185099433935266e-04, // 239
             1.728973174877601e-01, // 240
            -2.922479438098113e-02, // 241
            -1.377059839144265e-03, // 242
            -5.212898223991175e-02, // 243
             8.758681576242570e-04, // 244
            -1.978314391765866e-03, // 245
            -6.202690419918186e+01, // 246
             1.390829773664152e-06, // 247
            -3.951605449046036e-05, // 248
            -1.228327518192637e-06, // 249
            -7.977817697083979e-01, // 250
            -9.969506363713975e+00, // 251
             2.982434365572489e-01, // 252
             4.572758241911362e-03, // 253
             9.765239032777959e-02, // 254
            -1.476943169637243e-01, // 255
            -9.876451339802351e-06, // 256
             7.243754578888791e-03, // 257
            -1.488973020941380e-01, // 258
             1.443416165028835e-02, // 259
             1.070147716018074e+00, // 260
            -6.825308378288577e-04, // 261
            -3.873645333181137e-04, // 262
             4.322618095325018e-02, // 263
            -6.191117455089345e-06, // 264
            -4.353393477696255e-01, // 265
            -3.559340528717187e-06, // 266
             1.009133291561191e+00, // 267
             3.107191794749118e+01, // 268
            -2.777157204952687e-05, // 269
            -4.662707090830757e-05, // 270
            -3.195305938301471e-04, // 271
            -6.740661919929169e-07, // 272
            -2.532699137044447e-07, // 273
             3.706505743649819e-05, // 274
            -3.732816298148139e-03, // 275
             2.643222486960444e-02, // 276
            -1.140407576747953e-06, // 277
             1.299943086252764e-07, // 278
            -6.862829580710002e-07, // 279
             4.943968457243211e-03, // 280
            -2.699833310864302e-04, // 281
            -1.972758892576402e-01, // 282
             1.722050630739317e-07, // 283
            -2.085544100758662e-04, // 284
            -1.423270068380235e-04, // 285
             7.649424608478138e+01, // 286
             2.885703312632128e-01, // 287
            -5.426446771952723e+00, // 288
             2.437024615337463e-05, // 289
            -1.300447484017205e-05, // 290
             1.478816772813947e-05, // 291
            -1.454365406343173e-03, // 292
             1.199091530684572e-05, // 293
             4.827776356420166e-04, // 294
            -8.827913354842105e+00, // 295
            -1.609170745140699e+00, // 296
            -2.845274921341412e-05, // 297
             6.226110380138242e-02, // 298
            -1.008493258543504e-03, // 299
            -1.493667946333891e-02, // 300
             1.108125193566814e-03, // 301
            -5.271342280659412e-01, // 302
             1.967240741765371e-03, // 303
            -1.167976883617031e-05, // 304
            -1.629780506630189e-05, // 305
            -2.090002799230609e-02, // 306
            -1.229629437858635e-02, // 307
            -4.038553294736532e-02, // 308
            -1.285854757737838e-04, // 309
            -6.588389012094324e-01, // 310
            -4.233632797022944e+01, // 311
            -3.905988349425575e-01, // 312
            -9.395530527260523e-03, // 313
            -2.480603021959657e-04, // 314
            -7.952743616248551e-01, // 315
            -1.062046383322768e-03, // 316
             9.731438270523747e-04, // 317
             3.806961802033623e-07, // 318
             3.949310039808458e-06, // 319
            -2.004396034424440e-01, // 320
             7.473196795237097e-01, // 321
            -3.463752588254593e-04, // 322
             2.096827745723992e-05, // 323
            -4.401981240354411e-02, // 324
             7.466404269419494e-03, // 325
             1.950970686160449e+01, // 326
             4.509224409458552e-02, // 327
            -9.505008098531696e-01, // 328
             8.874177284685059e-05, // 329
            -2.505678815784387e-02, // 330
            -6.742305736970867e-01, // 331
             1.032982279940461e-03, // 332
            -2.826413796493408e-01, // 333
             5.865049257336347e-01, // 334
             2.663106966927407e-04, // 335
             9.982967799887893e-07, // 336
             3.485464731758717e-02, // 337
            -3.029586289964197e-06, // 338
            -2.255487147336967e-04, // 339
             1.085750420573335e-01, // 340
            -5.773504552979640e-04, // 341
             6.610045655647983e-06, // 342
             1.933231079207284e-05, // 343
            -1.701268667100515e-06, // 344
            -1.820743632691662e-05, // 345
            -1.871490077403103e-01, // 346
             4.707396470424385e-07, // 347
            -7.380809253697890e-02, // 348
             3.402952251771631e-04, // 349
             2.105715759062721e-05, // 350
             7.658077568503886e-02, // 351
             1.217442819692891e-05, // 352
            -3.295333210912546e+00, // 353
             1.254951332441662e-04, // 354
            -2.637226020391202e-03, // 355
            -1.529181411114252e-04, // 356
             2.206803936963150e-04, // 357
             7.101843546566326e-08, // 358
             4.958849823446357e-05, // 359
             4.741243953435399e-07, // 360
             1.676473898877835e-03, // 361
             7.528924196113373e-04, // 362
            -3.750489902406491e-04, // 363
             2.923246982053422e-03, // 364
             3.997112552147879e-05, // 365
             2.686932695601036e-04, // 366
            -9.408207475288435e-04, // 367
             3.564432222922342e-01, // 368
            -1.801931546207791e-05, // 369
             1.000770416687235e-02, // 370
             1.763567263222252e-01, // 371
            -5.732720519853384e-03, // 372
            -3.072903226288596e-05, // 373
             4.645998730593660e-03, // 374
            -3.152535454782893e-02, // 375
             1.180344535875499e-02, // 376
            -1.914470393550953e-03, // 377
            -9.049764805393206e-01, // 378
            -9.835777365613438e+00, // 379
            -9.632097937410538e-06, // 380
            -8.665623456822327e-04, // 381
             8.481329884223200e-06, // 382
             2.871834271036626e-04, // 383
            -2.129495544887953e-02, // 384
             9.167468158349798e-06, // 385
             1.644008245138115e-05, // 386
             4.716166824956590e-02, // 387
             1.448137635387560e-05, // 388
             1.798560903881398e-05, // 389
             1.644293820268063e-02, // 390
            -4.119746315703963e-04, // 391
             2.386612348618089e-02, // 392
             1.698045011795798e-02, // 393
             4.844271808857354e-03, // 394
             1.171745469170901e-03, // 395
            -3.794032651880975e-03, // 396
            -3.355836321816438e-02, // 397
            -3.463913094761148e-01, // 398
             2.903205466139763e+01, // 399
             1.096661777378172e-06, // 400
             7.062843735073743e-02, // 401
            -7.478670242718888e-02, // 402
             1.207599635484102e-07, // 403
            -1.216860371773197e-04, // 404
             7.013630705816710e-01, // 405
             3.792227760543518e-04, // 406
            -1.570505041490830e-04, // 407
            -4.516454859348578e-04, // 408
            -1.183675047885336e-06, // 409
             6.197188923822867e-02, // 410
             1.059597695585843e-02, // 411
            -3.340772598357176e-03, // 412
            -7.462651325877551e-07, // 413
             5.232485592832933e-04, // 414
            -7.733113714247027e-03, // 415
            -2.426485423036852e-04, // 416
             6.456478280941279e-05, // 417
             4.923566893263470e-04, // 418
            -1.831235401987268e-02, // 419
             2.001622960365948e-07, // 420
            -3.764485672020745e-03, // 421
             1.030546090571080e-05, // 422
             3.643974596033478e+00, // 423
            -2.847119376755772e-01, // 424
            -3.493143418729670e-02, // 425
             3.060655085947602e-07, // 426
             5.689726625774132e-06, // 427
            -1.191759677831937e-02, // 428
             5.810813642700576e-03, // 429
            -1.686912343252912e-05, // 430
             2.067032422280744e+01, // 431
            -1.373363074677083e-01, // 432
             1.031231659642781e+00, // 433
             9.855052972250450e-07, // 434
             1.378271572201190e-06, // 435
             3.434616463002157e-04, // 436
            -2.347128242078408e-02, // 437
             6.769703031860078e-03, // 438
             5.016446061689292e-03, // 439
             3.723540230999673e-06, // 440
             7.214429293376941e-02, // 441
            -1.928769147624984e-04, // 442
             8.543615861561562e-05, // 443
             8.672077021975492e-04, // 444
            -3.035271786531670e-05, // 445
            -5.517384668993133e-07, // 446
             2.763852490491017e-04, // 447
             2.271374558934191e-04, // 448
            -8.991699423547255e-04, // 449
            -5.968191662385705e-02, // 450
             2.258899246433437e-03, // 451
             9.076535396585141e-05, // 452
            -1.658247769345225e-03, // 453
             2.482114221142388e-04, // 454
            -1.168860081331062e-02, // 455
            -1.679289321758397e-01, // 456
            -4.892747637132959e-01, // 457
            -1.039685123975683e-02, // 458
            -7.654490635112109e-01, // 459
            -2.092929087933165e-03, // 460
             3.442005061079559e-06, // 461
             5.880095176172674e-01, // 462
             6.934690955263283e-03, // 463
            -1.152189273045443e-02, // 464
             1.011278175854198e-05, // 465
            -3.460815596056030e-02, // 466
            -3.495847464560002e-04, // 467
             1.687919378236427e-02, // 468
            -3.508398396367968e-05, // 469
            -2.518114574940823e-05, // 470
             1.667425455915435e-04, // 471
             4.988451167087195e-06, // 472
             6.725247909272390e-01, // 473
            -4.643498623264660e-01, // 474
             4.227800072490389e+00, // 475
             1.410549080164813e-04, // 476
             3.575861487750166e+01, // 477
             1.792247347348325e-07, // 478
            -2.768505318364309e-03, // 479
            -9.789510733969374e-08, // 480
             3.580208358604551e-02, // 481
            -4.639310696672908e-04, // 482
            -2.209242531866849e-04, // 483
            -1.119332983209977e-06, // 484
            -4.589367640239807e-08, // 485
             2.859978139585453e-02, // 486
             4.328336868510728e-02, // 487
            -5.292343215717468e-04, // 488
            -4.110910650989923e-05, // 489
             5.196551392105982e-07, // 490
            -8.516985146861495e-01, // 491
             7.858772569138278e-04, // 492
             1.541003654518444e-03, // 493
             7.756297536590457e-04, // 494
             1.523287579062569e-02, // 495
             7.396988077334391e-03, // 496
            -9.240644952517144e-07, // 497
             1.500810628227009e-03, // 498
            -3.764061164258140e-02, // 499
             7.167895384234272e-05, // 500
            -1.534911368031084e-03, // 501
            -1.779702090584130e-02, // 502
             3.940050455411785e-04, // 503
             2.177382398231271e-03, // 504
             9.911911984949272e-02, // 505
            -1.559546837399222e-02, // 506
             3.469225728546918e-07, // 507
            -9.955042269285236e-07, // 508
             4.596083788820021e-05, // 509
             1.866948737805383e-04, // 510
            -1.641230661048133e+00, // 511
            -2.922968859427354e-03, // 512
             1.238083776955499e-03, // 513
            -6.100853669895608e-03, // 514
            -5.347377903344370e-03, // 515
            -3.886931852381417e-02, // 516
            -4.745255876898417e-05, // 517
             4.398375259683814e-02, // 518
             5.289032547662483e-02, // 519
            -2.260149977298505e+01, // 520
            -1.625275038213368e-04, // 521
            -1.220454855552679e-04, // 522
             4.688871696013728e-07, // 523
            -3.553943440565741e-03, // 524
             2.763588331147149e-02, // 525
             3.316046608496635e-02, // 526
            -1.178398084544890e-03, // 527
            -1.566503020230627e-07, // 528
            -2.205477406358010e-07, // 529
            -2.013591119001789e-05, // 530
             3.916224177176010e-07, // 531
            -9.177810760437380e-06, // 532
             1.455227941535047e-04, // 533
             1.201561345798896e-02, // 534
            -3.588959241984275e-06, // 535
            -1.050873055316612e-06, // 536
             9.776411006281357e+00, // 537
            -8.098535948975314e-03, // 538
            -5.697767190809154e-02, // 539
             2.801265445277183e-05, // 540
             1.465520598276586e-06, // 541
             1.057381219457019e-03, // 542
             1.232436967922463e-03, // 543
            -8.265561952509430e-01, // 544
            -1.888568822864786e-02, // 545
            -2.845685870272673e-04, // 546
             2.808325810918364e+00, // 547
             3.714015396090324e-07, // 548
             7.626092902698088e-07, // 549
            -2.745766168669802e+00, // 550
            -6.989949784252706e-07, // 551
             6.330763421283412e-04, // 552
             5.609414346029821e-04, // 553
             5.282263628902669e+01, // 554
            -1.631535941228975e+01, // 555
            -2.224809592463700e-05, // 556
             6.434565352072610e-03, // 557
            -5.237467888228555e-01, // 558
            -3.260736546264601e-03, // 559
             5.088457385032513e-01, // 560
            -2.621833795634263e-03, // 561
            -7.021205358515401e-02, // 562
             1.025191120129930e-03, // 563
             2.689275292344112e-02, // 564
             2.315563609485010e-05, // 565
            -7.761001415204752e-04, // 566
            -1.050081570016970e-04, // 567
            -3.606846379859025e-04, // 568
            -1.238669549330732e+02, // 569
             6.050738051957567e-03, // 570
             3.736558264144103e-07, // 571
            -4.232231700817748e-06, // 572
            -2.263756948467680e-05, // 573
            -6.129193699455713e-04, // 574
             8.513498020811348e-02, // 575
             5.460022405176819e-04, // 576
             6.736426364075608e-02, // 577
             9.869893264304529e-04, // 578
            -3.663665212340610e-03, // 579
             3.543415091657454e-04, // 580
            -5.663816213646399e-07, // 581
             2.421098619060666e-03, // 582
             9.933745313385643e-02, // 583
            -8.736203517910922e-03, // 584
            -1.520625328723838e-03, // 585
            -3.022046451544771e+00, // 586
            -2.350988381461112e-01, // 587
            -9.880890370080402e-06, // 588
            -1.070103681180111e-01, // 589
            -5.442740172220624e+01, // 590
             1.640276928522909e+01, // 591
             1.018815787775114e-01, // 592
            -4.258391731687284e+00, // 593
            -1.146702789850158e-07, // 594
            -2.800129543238393e-03, // 595
             1.373864443506772e-05, // 596
            -6.541348493247087e-04, // 597
             4.531824960945149e-06, // 598
            -1.142616230211182e+00, // 599
             1.836056933255635e-05, // 600
             3.755981788888833e-06, // 601
             1.620536491858389e-03, // 602
            -9.376530147931115e-03, // 603
            -7.120621237147906e-07, // 604
            -1.468710794137038e-02, // 605
            -7.028551523512016e-04, // 606
             4.249234545371420e-05, // 607
            -3.112033549503515e+00, // 608
            -1.455184439478879e-06, // 609
             5.553570523773610e-07, // 610
            -2.941004340330804e-03, // 611
            -2.549593415959050e-07, // 612
             6.936370181790536e-07, // 613
             4.592079671710791e-02, // 614
             9.008249561283325e-04, // 615
            -2.022659784546086e-03, // 616
             1.680221358334769e-02, // 617
            -4.485905889737928e-01, // 618
             4.199799974854365e-05, // 619
             1.872059414901177e-05, // 620
             6.520633335937288e-01, // 621
             1.438179758120857e-05, // 622
             1.701739642094251e-06, // 623
            -1.807142306636908e-03, // 624
            -1.150771838389345e-04, // 625
            -2.381982527860724e-03, // 626
             1.125754781373270e-06, // 627
             1.777176944974833e-04, // 628
            -1.386157297399377e-01, // 629
            -1.571888147868116e-02, // 630
            -5.372542457390222e-03, // 631
             1.269994283598807e-01, // 632
            -2.073731437899601e-03, // 633
             2.903209803870814e-02, // 634
            -8.294883130799543e-07, // 635
            -8.983044063188567e-05, // 636
            -1.073299822875224e-06, // 637
             2.773312460800605e-05, // 638
             3.944343284518676e-02, // 639
            -5.588963888556066e-01, // 640
             2.643186414822344e-03, // 641
            -4.279089866027574e-02, // 642
            -1.753112736971276e-05, // 643
            -2.057285033280858e-01, // 644
             1.738922880023369e-03, // 645
             1.395181952107780e-03, // 646
             4.158403337452319e-05, // 647
            -1.084783505697314e-01, // 648
            -2.947399747252354e-01, // 649
            -2.372086651430772e-06, // 650
             7.817907760164114e-04, // 651
            -5.476607266315272e-04, // 652
            -8.899717492741901e-04, // 653
             2.410809824817440e-03, // 654
            -1.409945343245111e-01, // 655
             2.988190554495112e-07, // 656
             2.096251647540894e-01, // 657
            -1.952360284026433e+01, // 658
             1.642040632725600e-03, // 659
            -2.452135671497710e-04, // 660
             3.164654744355292e+01, // 661
            -1.206011759785120e-02, // 662
             2.846035525596871e-01, // 663
             7.338914261449880e-01, // 664
             1.952553276781819e-02, // 665
            -1.419084369045061e+02, // 666
            -5.601038773636567e-06, // 667
             2.035926544053639e-05, // 668
             8.748442288345347e-07, // 669
             1.456706360283059e-02, // 670
             5.961867354692852e-04, // 671
            -4.897366945242930e-04, // 672
            -4.126160804929668e-02, // 673
            -9.300227985816714e-02, // 674
            -2.708571775628468e-05, // 675
             2.365279607110603e-04, // 676
             1.895335714715820e-02, // 677
            -1.420759369380244e-04, // 678
             1.431618502198858e+00, // 679
            -7.344325166038377e-03, // 680
             6.653188602098420e-01, // 681
             1.197752271074741e-02, // 682
            -2.250220016943969e-07, // 683
             6.227996666853690e-02, // 684
             6.361102233526935e-01, // 685
             1.192679566123759e-03, // 686
             1.137147958158663e+00, // 687
             1.108377550054218e-08, // 688
            -2.672977181773889e+01, // 689
             4.086259946271631e-01, // 690
            -2.895293233648516e-05, // 691
            -8.474188402193942e-06, // 692
            -1.792940886505472e-02, // 693
            -1.236381106781893e-02, // 694
            -1.568373072135921e-03, // 695
            -5.772671144817872e-04, // 696
             8.428972064645508e-03, // 697
             2.731284703988487e-04, // 698
            -3.470429557952153e-03, // 699
            -1.743442227924288e-06, // 700
             3.247442664797795e-06, // 701
            -3.369330790652700e-05, // 702
            -9.868744697611483e-03, // 703
             6.472144262026189e-05, // 704
             3.850367755932755e+00, // 705
            -1.966421851656105e-07, // 706
            -3.623767397825817e-07, // 707
            -8.798314060656597e-04, // 708
             1.370126970317377e-05, // 709
            -3.956666677601503e+01, // 710
             1.620055651651388e-01, // 711
            -4.534269767193245e-03, // 712
            -3.967285887976975e-03, // 713
             4.645017029304304e-05, // 714
             6.238735466545945e-04, // 715
             2.365512827773347e+00, // 716
             6.777847704742718e-04, // 717
            -9.064682461552018e-03, // 718
             1.791737906761345e-05, // 719
             2.254841561568079e-02, // 720
            -8.855494825096316e-03, // 721
             4.469587152379220e-02, // 722
            -1.887198956809224e-06, // 723
             1.417423466110599e-02, // 724
             7.493362086293835e-06, // 725
             1.020024030336878e-06, // 726
             4.550892150204453e+00, // 727
            -3.910913669095616e-04, // 728
             4.383417718328888e-05, // 729
            -1.373839373641579e-07, // 730
             4.748525897948178e-03, // 731
             8.406992350573704e-07, // 732
             2.167662762620208e-05, // 733
            -1.117259207448146e-01, // 734
             7.588749877934355e-01, // 735
            -3.719079611527462e-02, // 736
            -1.186458311276126e-01, // 737
            -1.815607771938270e-03, // 738
             6.526818303621473e+00, // 739
             4.162216298227011e-05, // 740
             1.703533587920091e-04, // 741
            -5.181261407649426e-04, // 742
             4.330893881830333e-02, // 743
             1.060331951531754e-03, // 744
            -9.072558134388938e+00, // 745
             1.863211406010417e-04, // 746
            -9.766858668935289e-01, // 747
             5.761895314305947e+00, // 748
            -2.504755860489478e+01, // 749
             8.686785191629061e-03, // 750
            -1.078651777488939e-03, // 751
            -4.047614460054906e+00, // 752
             1.325697934319451e-03, // 753
            -5.544412650015975e-04, // 754
            -2.805029733465482e-04, // 755
            -9.140831992158687e-05, // 756
            -1.084274509778443e-06, // 757
            -1.238338997797549e-02, // 758
            -1.503795902192240e-04, // 759
             2.623110680530113e-03, // 760
             1.214181825346697e-02, // 761
             4.028395353466122e-03, // 762
             2.319704117902895e-03, // 763
             2.591580372351125e-01, // 764
             1.336440984046396e-02, // 765
            -4.821586094396411e-04, // 766
             3.621529745088930e-01, // 767
             9.593465012977962e+00, // 768
             4.913010901759097e-06, // 769
             8.912580173746785e-04, // 770
             1.476129553748714e-02, // 771
            -1.778854845242114e+00, // 772
            -8.244191812804459e-04, // 773
             2.799267699129226e-03, // 774
            -7.837129271186146e-05, // 775
             5.274507252167766e-06, // 776
            -4.692827019408063e-02, // 777
            -4.967188254396651e-05, // 778
             3.497455039619469e-04, // 779
            -1.665637406070908e+01, // 780
            -3.849976654521141e-03, // 781
            -2.173084406135625e-02, // 782
            -3.712134583920164e-04, // 783
             5.597038402495769e-01, // 784
            -3.108482505352908e+01, // 785
             1.351586476082094e-01, // 786
            -7.332097169232105e-02, // 787
             5.684911400801718e-05, // 788
            -6.804813491303547e-03, // 789
             3.666921450137816e+00, // 790
            -4.239707789945184e-04, // 791
             1.395691655620510e-02, // 792
            -2.647427487756773e-03, // 793
            -3.636893522313653e-01, // 794
             1.545346251256439e-04, // 795
             6.456134797907815e-04, // 796
            -1.348956695118250e-07, // 797
            -1.814359705184004e-04, // 798
             1.317148841325318e+00, // 799
             9.172903497830807e-03, // 800
             8.955231555058174e-05, // 801
             6.582483923026180e-06, // 802
             3.485597947565050e-05, // 803
            -3.782190816568631e+00, // 804
             8.543964343311254e-07, // 805
             7.393474808450527e-04, // 806
             6.493024197372790e-02, // 807
             3.105566595292323e-04, // 808
            -3.258408296140403e-04, // 809
             1.038526315857662e-01, // 810
            -2.146831422758402e-07, // 811
             4.372079155359293e-01, // 812
             1.161614834836833e-03, // 813
             2.315013835639015e-03, // 814
            -2.658606664261629e-02, // 815
            -1.761436658366065e-03, // 816
            -6.343798265800350e-04, // 817
            -5.207584087388719e-07, // 818
             5.499821421032488e-04, // 819
            -4.950026000014970e+01, // 820
            -9.071347520386511e-05, // 821
             1.603504916823247e-03, // 822
             3.053078068017829e-03, // 823
             2.754856323877343e-07, // 824
            -4.007226901173632e-05, // 825
             4.457781996948791e+01, // 826
            -3.993434381410155e-04, // 827
            -6.980720613294786e-05, // 828
             6.232270026699163e-02, // 829
            -8.373397235849100e-07, // 830
            -7.423741686267553e-02, // 831
            -2.588636153483405e-04, // 832
             2.241853885394155e-01, // 833
            -9.281652971326648e-05, // 834
            -7.139750843628880e-01, // 835
             3.177661037474029e-03, // 836
            -1.610220322954809e-03, // 837
             3.634808413955193e-03, // 838
            -3.925090964526757e-05, // 839
            -2.942004712234915e-05, // 840
            -9.274713237785613e-02, // 841
             1.366537917103194e-05, // 842
            -2.135046991045011e-04, // 843
             1.356713568523226e-05, // 844
             1.792804950423872e-01, // 845
            -4.234652102607066e-03, // 846
            -9.850485025584135e-02, // 847
             5.338824843779810e-04, // 848
            -1.656432997974289e-04, // 849
             1.116208473280683e-04, // 850
            -1.030644640403198e-01, // 851
             1.152321447701330e-05, // 852
            -4.521201211724261e+00, // 853
            -7.723019751252215e-08, // 854
             6.469251621959178e-05, // 855
            -2.045678269645432e-01, // 856
             7.067091838857260e-02, // 857
            -3.222761104400343e-07, // 858
            -1.347156864156533e-02, // 859
             1.194954982065101e-06, // 860
             7.111380670248241e-04, // 861
             2.489251369910762e-03, // 862
             1.233298210336053e-04, // 863
            -6.209852172237716e+01, // 864
            -1.594568907350438e-05, // 865
            -2.886445305740801e-02, // 866
             1.303623985420666e-05, // 867
            -8.614382906836861e+00, // 868
            -4.239024036502461e-03, // 869
            -1.058206535573405e-06, // 870
             2.357580508501084e-06, // 871
            -4.229213442412450e-04, // 872
            -3.927074054902377e-06, // 873
             8.612052283600687e-02, // 874
             1.580270265964731e+02, // 875
             1.353616252192043e-06, // 876
             3.058612221411337e-07, // 877
            -6.725731407702903e-02, // 878
             9.497118638931210e-05, // 879
            -1.609084396518807e-07, // 880
             4.377179824642569e-06, // 881
            -1.531731893640646e-06, // 882
             1.128126785703810e-05, // 883
            -4.879150419213220e-02, // 884
            -7.094227097891366e-02, // 885
            -2.385741315890686e-02, // 886
             4.955952735203068e-07, // 887
            -2.981552389475616e-04, // 888
             1.080946858817024e+00, // 889
             1.144533889653911e-06, // 890
            -3.267470645471631e+00, // 891
            -1.834560205961402e-03, // 892
            -3.280922384882854e-05, // 893
             1.967402132810969e-07, // 894
             9.198794696469189e-04, // 895
            -4.305073585941092e-01, // 896
            -3.139481549895932e-03, // 897
            -5.170461488240576e+01, // 898
            -3.355717669535856e-05, // 899
             8.015123400029655e+00, // 900
            -3.906851924163704e-03, // 901
            -1.094111805808722e-04, // 902
            -5.300848009104041e-02, // 903
            -4.487985722491207e-04, // 904
            -6.627816000396283e-05, // 905
             2.237054335411979e-02, // 906
            -1.883106648520884e-04, // 907
             2.535858321470683e+01, // 908
            -4.195712319125971e-06, // 909
            -6.749022435906695e-01, // 910
             6.146810677854001e-04, // 911
             1.906178301562541e-05, // 912
             5.803388051296810e-08, // 913
             3.847322076076114e-06, // 914
            -5.255042057571114e-01, // 915
             5.800206275041303e-06, // 916
             2.824440912542355e+00, // 917
            -3.278805554409356e-01, // 918
             1.429618325030397e-02, // 919
             1.230664439656286e-02, // 920
            -9.787099864680942e-07, // 921
             8.151921734789461e+00, // 922
             4.118598850933469e-03, // 923
            -4.140143224398193e-04, // 924
             8.895186497070473e-06, // 925
            -3.731640052008049e-05, // 926
             3.803626412305032e+00, // 927
            -1.595942988253830e+01, // 928
             1.531727567270211e-03, // 929
            -2.359791206781427e-05, // 930
             1.061319714099393e-03, // 931
             6.278219860942618e-07, // 932
            -4.152547833552468e-06, // 933
            -1.968830810292227e-02, // 934
             8.137158379310119e-04, // 935
            -3.995019206795546e-05, // 936
            -9.670462011463872e-07, // 937
             3.740029600537304e-04, // 938
            -2.786519037694690e-07, // 939
             4.095935489109521e-07, // 940
             2.357576451613217e-03, // 941
            -4.058860056879988e-04, // 942
             6.412223061971719e+01, // 943
            -5.235597476080406e+00, // 944
            -3.857195155521446e+01, // 945
            -1.667873274067702e-02, // 946
             4.842190789211117e-02, // 947
             7.845710409247061e-04, // 948
            -6.000315023152174e-05, // 949
             1.156340823224364e-06, // 950
             3.088904563052881e-04, // 951
            -1.900037321275637e-01, // 952
            -3.639220548133314e-07, // 953
             3.920175589172463e-03, // 954
             2.028213532172017e+01, // 955
             9.456550723983885e-01, // 956
            -6.442596672868288e-06, // 957
             2.929424405794604e-05, // 958
            -3.182167167993024e-07, // 959
             1.920673847012350e-03, // 960
             1.179673854410346e-02, // 961
            -3.847540429626173e-03, // 962
            -9.812842623851036e-03, // 963
             3.061029977931204e+00, // 964
            -3.817978799133011e-05, // 965
             1.441281913861467e-04, // 966
            -3.227839866681310e-07, // 967
             9.668239019013191e-03, // 968
            -2.475606627271636e-01, // 969
            -5.699968647076894e-06, // 970
            -6.291407152077044e-04, // 971
             4.737528184125861e-01, // 972
             5.481997502615153e-07, // 973
             1.018119721309781e-01, // 974
            -1.080964491558556e-03, // 975
            -1.256806745422054e-01, // 976
            -8.398646511650066e-04, // 977
             1.141963249797100e-06, // 978
            -7.181453659290142e-04, // 979
             1.083843473676305e-02, // 980
             2.439570329973002e-07, // 981
             4.288712341106716e-04, // 982
            -1.738523454156018e-03, // 983
             3.805178933209632e+00, // 984
            -7.902133300402308e-07, // 985
             8.815915641533629e-01, // 986
             6.450987295531414e-04, // 987
             2.034621299845591e-05, // 988
            -1.546976112032880e-04, // 989
             1.014633469010829e-01, // 990
            -2.272896852793822e-07, // 991
            -2.426635682406310e-05, // 992
             5.938889155383309e-05, // 993
             5.531566750024967e-06, // 994
            -7.111579312757437e-07, // 995
             9.550982833102155e-05, // 996
             2.479753080057797e-02, // 997
             1.511334357464426e-01, // 998
            -5.653616814985572e-05, // 999
             1.186009538300981e-05, // 1000
             3.935948845773523e-05, // 1001
             5.008617703440515e-03, // 1002
            -5.446545142621974e-05, // 1003
             1.866234276865303e-05, // 1004
            -9.094334775470747e-06, // 1005
            -1.543296120573496e-04, // 1006
             6.466028181180549e-01, // 1007
            -5.051095459871887e-03, // 1008
             1.849447192105474e-04, // 1009
             4.666113415353376e-04, // 1010
            -6.907777151158394e-04, // 1011
             2.342486958628225e-03, // 1012
             5.298531090224654e-02, // 1013
            -6.345502622980523e-04, // 1014
             1.529101499116541e-05, // 1015
             1.008813007677584e-05, // 1016
             8.674502670120467e-02, // 1017
            -2.368794780057904e-03, // 1018
             1.076605628505489e+01, // 1019
            -4.612189432259496e-03, // 1020
             6.891606849198961e-06, // 1021
            -3.032311661578543e+00, // 1022
            -9.923850603633190e-01, // 1023
             2.781192268289204e-02, // 1024
            -1.378806379233269e-01, // 1025
            -1.541461639431442e-05, // 1026
            -1.267453341472759e-04, // 1027
            -4.782972358455206e-03, // 1028
             2.265304501368305e-03, // 1029
             3.084877433561284e-01, // 1030
             8.053822141260296e+00, // 1031
             4.988761757697678e-04, // 1032
            -1.823891560117426e-04, // 1033
            -9.855719494462911e-08, // 1034
            -1.896048142023293e-02, // 1035
             3.191401594206434e-04, // 1036
             1.028155492850328e+00, // 1037
             3.217025760912635e+01, // 1038
            -4.589985503786692e+00, // 1039
             3.291184606083390e-07, // 1040
             6.489419910490510e-04, // 1041
            -2.969793308520969e-01, // 1042
            -1.031707155639427e+01, // 1043
             1.106306896703647e-03, // 1044
             4.638915852339120e-04, // 1045
            -1.039390864443330e-03, // 1046
             1.814180749549196e-04, // 1047
            -1.414389538035174e-04, // 1048
            -4.515544847292617e-01, // 1049
             3.160563249805188e-07, // 1050
             5.484393064289777e+01, // 1051
            -7.671080718016972e-03, // 1052
             2.049567728406950e-02, // 1053
            -1.003948170927567e-04, // 1054
            -8.121277587123109e-04, // 1055
             6.306585616027708e-05, // 1056
            -3.103340519342452e+00, // 1057
            -1.221502389784228e-05, // 1058
             2.870247706828715e-04, // 1059
             9.905561540437441e-02, // 1060
            -3.253062800553117e-04, // 1061
            -2.095795804511883e-01, // 1062
            -6.224793383113148e-04, // 1063
            -7.463074010760617e-02, // 1064
            -8.334502356293943e-06, // 1065
             1.911345110381845e-01, // 1066
            -4.040670945914569e-04, // 1067
             3.024526563338562e-01, // 1068
             7.511578119129332e-03, // 1069
            -1.259124837182931e-01, // 1070
             6.686003979916065e-04, // 1071
             5.067639919444725e-01, // 1072
             6.170784754620408e-04, // 1073
             2.138059218460886e-02, // 1074
            -3.830268227081188e-06, // 1075
            -1.609143917907646e-02, // 1076
             9.427580654832892e-07, // 1077
            -8.916358633272387e-07, // 1078
            -5.416443538416546e-03, // 1079
            -6.490662425248444e-04, // 1080
            -2.858335525665452e-04, // 1081
            -1.446485665003929e-03, // 1082
            -1.083894330604207e-01, // 1083
             4.041415775123618e-02, // 1084
             1.685668645429894e+01, // 1085
            -1.742764474847375e-02, // 1086
             6.153905679965743e-01, // 1087
             6.533507503449002e-04, // 1088
            -1.402880286093588e-01, // 1089
            -6.168344227409254e-03, // 1090
            -1.225714356848499e-05, // 1091
            -1.314586225189880e-03, // 1092
             3.501514739901043e-02, // 1093
             3.210009344411116e-06, // 1094
            -4.794284587700563e-05, // 1095
             1.006168357792053e-02, // 1096
            -1.167831325736443e+01, // 1097
             3.247127066630455e+00, // 1098
            -7.662641738586803e-06, // 1099
            -2.365401187620390e-01, // 1100
             2.443483605967312e-04, // 1101
             2.685944295993232e-05, // 1102
            -1.414776984594313e+00, // 1103
            -2.284997548551336e-07, // 1104
             9.732498442065731e-04, // 1105
            -7.017289698631193e-06, // 1106
            -5.339564038206727e-04, // 1107
             7.765602697945371e-05, // 1108
            -2.448248179767097e-04, // 1109
            -7.885944758708190e-07, // 1110
             1.640815859451192e-02, // 1111
             7.044230616339621e-04, // 1112
             8.391843921890763e-05, // 1113
            -9.491026528949892e-04, // 1114
             1.379864900563658e-04, // 1115
             2.674393612776758e+01, // 1116
             1.339737511424151e+02, // 1117
            -2.270339300688506e-06, // 1118
             6.087326118690078e-03, // 1119
            -1.961185190811965e-02, // 1120
            -7.977867886748748e-07, // 1121
            -1.587487067913507e-05, // 1122
             2.478637042147349e-04, // 1123
             9.176867367188676e-01, // 1124
            -5.293140096703369e-04, // 1125
            -1.257630231071701e-03, // 1126
             3.300892392507135e-03, // 1127
            -1.343667434372408e-03, // 1128
             2.774952840673057e+01, // 1129
            -3.165321168041957e-04, // 1130
             9.095800113902481e-03, // 1131
             8.079608254415601e-01, // 1132
             4.722004021095026e-04, // 1133
            -2.118901241714039e-02, // 1134
             2.867539217201748e-08, // 1135
            -2.705695094982897e-01, // 1136
            -8.515394607400929e-02, // 1137
            -4.197261793866366e-01, // 1138
             2.212639638974578e+00, // 1139
             1.252699316038869e-02, // 1140
             2.850749642695844e-07, // 1141
             1.536874709232578e-02, // 1142
             7.218798085501156e-02, // 1143
            -2.567828879118702e+01, // 1144
             1.832110022807660e-01, // 1145
            -6.611733278906529e-02, // 1146
            -1.265745362476884e+01, // 1147
             1.038388284419168e-05, // 1148
             2.496733694667532e-04, // 1149
            -2.216726275584555e-02, // 1150
            -5.829462382967487e-03, // 1151
             3.986008429632646e-04, // 1152
            -2.427309650597124e-02, // 1153
            -2.170549716945572e-06, // 1154
             3.308068351332694e-06, // 1155
             8.342232539653132e-07, // 1156
            -1.776430729592890e+01, // 1157
             8.306425614350023e-03, // 1158
            -5.291015119179071e-04, // 1159
             2.573142105686817e+01, // 1160
             1.604717745620729e+01, // 1161
             2.778912391367238e-01}; // 1162
    m_k_x_inter_A_A_0 =  2.425338827042858e-02; // A^(-1))
    m_d_x_inter_A_A_0 =  3.316646596053094e+01; // A^(-1))
    m_k_x_intra_A_B_1 =  1.724963531766558e-02; // A^(-1))
    m_d_x_intra_A_B_1 =  5.914680445149175e-01; // A^(-1))
    m_k_x_inter_A_B_0 =  7.110252493084878e-01; // A^(-1))
    m_d_x_inter_A_B_0 =  6.752441814151027e+00; // A^(-1))
    m_k_x_intra_B_B_1 =  1.012863667645039e-01; // A^(-1))
    m_d_x_intra_B_B_1 =  2.451806382336462e+01; // A^(-1))
    m_k_x_inter_B_B_0 =  5.425874490689713e-01; // A^(-1))
    m_d_x_inter_B_B_0 =  1.363006444555942e+01; // A^(-1))
    m_ri =  0.000000000000000e+00; // A
    m_ro =  4.500000000000000e+00; // A

    } // end if mon1 == "h2o_mb" and mon2 == "h2o_mb" and mon3 == "h2o_mb"
    // =====>> END SECTION CONSTRUCTOR <<=====
}

//----------------------------------------------------------------------------//

double mbnrg_A1B2_A1B2_A1B2_deg4_v2::f_switch(const double r, double& g)
{
    if (r > m_ro) {
        g = 0.0;
        return 0.0;
    } else if (r > m_ri) {
        const double t1 = M_PI/(m_ro - m_ri);
        const double x = (r - m_ri)*t1;
        g = - std::sin(x)*t1/2.0;
        return (1.0 + std::cos(x))/2.0;
    } else {
        g = 0.0;
        return 1.0;
    }
}

//----------------------------------------------------------------------------//

 double mbnrg_A1B2_A1B2_A1B2_deg4_v2::eval(const double *xyz1, const double *xyz2, const double *xyz3, const size_t n) {
    std::vector<double> energies(n,0.0);
    std::vector<double> energies_sw(n,0.0);

    std::vector<double> xyz(27);
    double sw = 0.0;
    polynomial my_poly;

    for (size_t j = 0; j < n; j++) {
        const double *mon1 = xyz1 + 9*j;
        const double *mon2 = xyz2 + 9*j;
        const double *mon3 = xyz3 + 9*j;


        const double d12[3] =
                         {mon1[0] - mon2[0],
                          mon1[1] - mon2[1],
                          mon1[2] - mon2[2]};

        const double d12rsq = d12[0]*d12[0] + d12[1]*d12[1] + d12[2]*d12[2];
        const double d12r = std::sqrt(d12rsq);

        const double d13[3] =
                         {mon1[0] - mon3[0],
                          mon1[1] - mon3[1],
                          mon1[2] - mon3[2]};

        const double d13rsq = d13[0]*d13[0] + d13[1]*d13[1] + d13[2]*d13[2];
        const double d13r = std::sqrt(d13rsq);

        const double d23[3] =
                         {mon2[0] - mon3[0],
                          mon2[1] - mon3[1],
                          mon2[2] - mon3[2]};

        const double d23rsq = d23[0]*d23[0] + d23[1]*d23[1] + d23[2]*d23[2];
        const double d23r = std::sqrt(d23rsq);

        if (true  && d12r > m_ro  && d13r > m_ro  && d23r > m_ro ) {
             continue;
        }

        std::copy(mon1, mon1 + 9, xyz.begin() + 0);

        std::copy(mon2, mon2 + 9, xyz.begin() + 9);

        std::copy(mon3, mon3 + 9, xyz.begin() + 18);


        const double* coords_A_1_a = xyz.data() + 0;

        const double* coords_B_1_a = xyz.data() + 3;

        const double* coords_B_2_a = xyz.data() + 6;

        const double* coords_A_2_b = xyz.data() + 9;

        const double* coords_B_3_b = xyz.data() + 12;

        const double* coords_B_4_b = xyz.data() + 15;

        const double* coords_A_3_c = xyz.data() + 18;

        const double* coords_B_5_c = xyz.data() + 21;

        const double* coords_B_6_c = xyz.data() + 24;


        double w12 =     -9.721486914088159e-02;  //from MBpol
        double w13 =     -9.721486914088159e-02;
        double wcross =   9.859272078406150e-02;

    
        variable vs[36];

        double xs[36];

        xs[0] = vs[0].v_exp0(m_d_x_inter_A_A_0, m_k_x_inter_A_A_0, coords_A_1_a, coords_A_2_b);
        xs[1] = vs[1].v_exp0(m_d_x_inter_A_A_0, m_k_x_inter_A_A_0, coords_A_1_a, coords_A_3_c);
        xs[2] = vs[2].v_exp0(m_d_x_intra_A_B_1, m_k_x_intra_A_B_1, coords_A_1_a, coords_B_1_a);
        xs[3] = vs[3].v_exp0(m_d_x_intra_A_B_1, m_k_x_intra_A_B_1, coords_A_1_a, coords_B_2_a);
        xs[4] = vs[4].v_exp0(m_d_x_inter_A_B_0, m_k_x_inter_A_B_0, coords_A_1_a, coords_B_3_b);
        xs[5] = vs[5].v_exp0(m_d_x_inter_A_B_0, m_k_x_inter_A_B_0, coords_A_1_a, coords_B_4_b);
        xs[6] = vs[6].v_exp0(m_d_x_inter_A_B_0, m_k_x_inter_A_B_0, coords_A_1_a, coords_B_5_c);
        xs[7] = vs[7].v_exp0(m_d_x_inter_A_B_0, m_k_x_inter_A_B_0, coords_A_1_a, coords_B_6_c);
        xs[8] = vs[8].v_exp0(m_d_x_inter_A_A_0, m_k_x_inter_A_A_0, coords_A_2_b, coords_A_3_c);
        xs[9] = vs[9].v_exp0(m_d_x_inter_A_B_0, m_k_x_inter_A_B_0, coords_A_2_b, coords_B_1_a);
        xs[10] = vs[10].v_exp0(m_d_x_inter_A_B_0, m_k_x_inter_A_B_0, coords_A_2_b, coords_B_2_a);
        xs[11] = vs[11].v_exp0(m_d_x_intra_A_B_1, m_k_x_intra_A_B_1, coords_A_2_b, coords_B_3_b);
        xs[12] = vs[12].v_exp0(m_d_x_intra_A_B_1, m_k_x_intra_A_B_1, coords_A_2_b, coords_B_4_b);
        xs[13] = vs[13].v_exp0(m_d_x_inter_A_B_0, m_k_x_inter_A_B_0, coords_A_2_b, coords_B_5_c);
        xs[14] = vs[14].v_exp0(m_d_x_inter_A_B_0, m_k_x_inter_A_B_0, coords_A_2_b, coords_B_6_c);
        xs[15] = vs[15].v_exp0(m_d_x_inter_A_B_0, m_k_x_inter_A_B_0, coords_A_3_c, coords_B_1_a);
        xs[16] = vs[16].v_exp0(m_d_x_inter_A_B_0, m_k_x_inter_A_B_0, coords_A_3_c, coords_B_2_a);
        xs[17] = vs[17].v_exp0(m_d_x_inter_A_B_0, m_k_x_inter_A_B_0, coords_A_3_c, coords_B_3_b);
        xs[18] = vs[18].v_exp0(m_d_x_inter_A_B_0, m_k_x_inter_A_B_0, coords_A_3_c, coords_B_4_b);
        xs[19] = vs[19].v_exp0(m_d_x_intra_A_B_1, m_k_x_intra_A_B_1, coords_A_3_c, coords_B_5_c);
        xs[20] = vs[20].v_exp0(m_d_x_intra_A_B_1, m_k_x_intra_A_B_1, coords_A_3_c, coords_B_6_c);
        xs[21] = vs[21].v_exp0(m_d_x_intra_B_B_1, m_k_x_intra_B_B_1, coords_B_1_a, coords_B_2_a);
        xs[22] = vs[22].v_exp0(m_d_x_inter_B_B_0, m_k_x_inter_B_B_0, coords_B_1_a, coords_B_3_b);
        xs[23] = vs[23].v_exp0(m_d_x_inter_B_B_0, m_k_x_inter_B_B_0, coords_B_1_a, coords_B_4_b);
        xs[24] = vs[24].v_exp0(m_d_x_inter_B_B_0, m_k_x_inter_B_B_0, coords_B_1_a, coords_B_5_c);
        xs[25] = vs[25].v_exp0(m_d_x_inter_B_B_0, m_k_x_inter_B_B_0, coords_B_1_a, coords_B_6_c);
        xs[26] = vs[26].v_exp0(m_d_x_inter_B_B_0, m_k_x_inter_B_B_0, coords_B_2_a, coords_B_3_b);
        xs[27] = vs[27].v_exp0(m_d_x_inter_B_B_0, m_k_x_inter_B_B_0, coords_B_2_a, coords_B_4_b);
        xs[28] = vs[28].v_exp0(m_d_x_inter_B_B_0, m_k_x_inter_B_B_0, coords_B_2_a, coords_B_5_c);
        xs[29] = vs[29].v_exp0(m_d_x_inter_B_B_0, m_k_x_inter_B_B_0, coords_B_2_a, coords_B_6_c);
        xs[30] = vs[30].v_exp0(m_d_x_intra_B_B_1, m_k_x_intra_B_B_1, coords_B_3_b, coords_B_4_b);
        xs[31] = vs[31].v_exp0(m_d_x_inter_B_B_0, m_k_x_inter_B_B_0, coords_B_3_b, coords_B_5_c);
        xs[32] = vs[32].v_exp0(m_d_x_inter_B_B_0, m_k_x_inter_B_B_0, coords_B_3_b, coords_B_6_c);
        xs[33] = vs[33].v_exp0(m_d_x_inter_B_B_0, m_k_x_inter_B_B_0, coords_B_4_b, coords_B_5_c);
        xs[34] = vs[34].v_exp0(m_d_x_inter_B_B_0, m_k_x_inter_B_B_0, coords_B_4_b, coords_B_6_c);
        xs[35] = vs[35].v_exp0(m_d_x_intra_B_B_1, m_k_x_intra_B_B_1, coords_B_5_c, coords_B_6_c);

        double gsw12 = 0.0;
        double sw12 = f_switch(d12r, gsw12);
        double gsw13 = 0.0;
        double sw13 = f_switch(d13r, gsw13);
        double gsw23 = 0.0;
        double sw23 = f_switch(d23r, gsw23);

        sw = sw12*sw13 + sw12*sw23 + sw13*sw23;

        energies[j] = my_poly.eval(xs,coefficients.data());
        energies_sw[j] = energies[j]*sw;

    }

    double energy = 0.0;
    for (size_t i = 0; i < n; i++)
        energy += energies_sw[i];

    return energy;

}

//----------------------------------------------------------------------------//

double mbnrg_A1B2_A1B2_A1B2_deg4_v2::eval(const double *xyz1, const double *xyz2, const double *xyz3, double *grad1, double *grad2, double *grad3 , const size_t n, std::vector<double> *virial) {
    std::vector<double> energies(n,0.0);
    std::vector<double> energies_sw(n,0.0);

    std::vector<double> xyz(27);
    double sw = 0.0;
    polynomial my_poly;

    for (size_t j = 0; j < n; j++) {
        const double *mon1 = xyz1 + 9*j;
        const double *mon2 = xyz2 + 9*j;
        const double *mon3 = xyz3 + 9*j;


        const double d12[3] =
                         {mon1[0] - mon2[0],
                          mon1[1] - mon2[1],
                          mon1[2] - mon2[2]};

        const double d12rsq = d12[0]*d12[0] + d12[1]*d12[1] + d12[2]*d12[2];
        const double d12r = std::sqrt(d12rsq);

        const double d13[3] =
                         {mon1[0] - mon3[0],
                          mon1[1] - mon3[1],
                          mon1[2] - mon3[2]};

        const double d13rsq = d13[0]*d13[0] + d13[1]*d13[1] + d13[2]*d13[2];
        const double d13r = std::sqrt(d13rsq);

        const double d23[3] =
                         {mon2[0] - mon3[0],
                          mon2[1] - mon3[1],
                          mon2[2] - mon3[2]};

        const double d23rsq = d23[0]*d23[0] + d23[1]*d23[1] + d23[2]*d23[2];
        const double d23r = std::sqrt(d23rsq);

        if (true  && d12r > m_ro  && d13r > m_ro  && d23r > m_ro ) {
             continue;
        }

        std::vector<double> gradients(27,0.0);

        std::copy(mon1, mon1 + 9, xyz.begin() + 0);

        std::copy(mon2, mon2 + 9, xyz.begin() + 9);

        std::copy(mon3, mon3 + 9, xyz.begin() + 18);
        const double* coords_A_1_a = xyz.data() + 0;

        const double* coords_B_1_a = xyz.data() + 3;

        const double* coords_B_2_a = xyz.data() + 6;

        const double* coords_A_2_b = xyz.data() + 9;

        const double* coords_B_3_b = xyz.data() + 12;

        const double* coords_B_4_b = xyz.data() + 15;

        const double* coords_A_3_c = xyz.data() + 18;

        const double* coords_B_5_c = xyz.data() + 21;

        const double* coords_B_6_c = xyz.data() + 24;


        double* coords_A_1_a_g = gradients.data() + 0;

        double* coords_B_1_a_g = gradients.data() + 3;

        double* coords_B_2_a_g = gradients.data() + 6;

        double* coords_A_2_b_g = gradients.data() + 9;

        double* coords_B_3_b_g = gradients.data() + 12;

        double* coords_B_4_b_g = gradients.data() + 15;

        double* coords_A_3_c_g = gradients.data() + 18;

        double* coords_B_5_c_g = gradients.data() + 21;

        double* coords_B_6_c_g = gradients.data() + 24;



        double w12 =     -9.721486914088159e-02;  //from MBpol
        double w13 =     -9.721486914088159e-02;
        double wcross =   9.859272078406150e-02;

    
        variable vs[36];

        double xs[36];


        double gxs[36];

        xs[0] = vs[0].v_exp0(m_d_x_inter_A_A_0, m_k_x_inter_A_A_0, coords_A_1_a, coords_A_2_b);
        xs[1] = vs[1].v_exp0(m_d_x_inter_A_A_0, m_k_x_inter_A_A_0, coords_A_1_a, coords_A_3_c);
        xs[2] = vs[2].v_exp0(m_d_x_intra_A_B_1, m_k_x_intra_A_B_1, coords_A_1_a, coords_B_1_a);
        xs[3] = vs[3].v_exp0(m_d_x_intra_A_B_1, m_k_x_intra_A_B_1, coords_A_1_a, coords_B_2_a);
        xs[4] = vs[4].v_exp0(m_d_x_inter_A_B_0, m_k_x_inter_A_B_0, coords_A_1_a, coords_B_3_b);
        xs[5] = vs[5].v_exp0(m_d_x_inter_A_B_0, m_k_x_inter_A_B_0, coords_A_1_a, coords_B_4_b);
        xs[6] = vs[6].v_exp0(m_d_x_inter_A_B_0, m_k_x_inter_A_B_0, coords_A_1_a, coords_B_5_c);
        xs[7] = vs[7].v_exp0(m_d_x_inter_A_B_0, m_k_x_inter_A_B_0, coords_A_1_a, coords_B_6_c);
        xs[8] = vs[8].v_exp0(m_d_x_inter_A_A_0, m_k_x_inter_A_A_0, coords_A_2_b, coords_A_3_c);
        xs[9] = vs[9].v_exp0(m_d_x_inter_A_B_0, m_k_x_inter_A_B_0, coords_A_2_b, coords_B_1_a);
        xs[10] = vs[10].v_exp0(m_d_x_inter_A_B_0, m_k_x_inter_A_B_0, coords_A_2_b, coords_B_2_a);
        xs[11] = vs[11].v_exp0(m_d_x_intra_A_B_1, m_k_x_intra_A_B_1, coords_A_2_b, coords_B_3_b);
        xs[12] = vs[12].v_exp0(m_d_x_intra_A_B_1, m_k_x_intra_A_B_1, coords_A_2_b, coords_B_4_b);
        xs[13] = vs[13].v_exp0(m_d_x_inter_A_B_0, m_k_x_inter_A_B_0, coords_A_2_b, coords_B_5_c);
        xs[14] = vs[14].v_exp0(m_d_x_inter_A_B_0, m_k_x_inter_A_B_0, coords_A_2_b, coords_B_6_c);
        xs[15] = vs[15].v_exp0(m_d_x_inter_A_B_0, m_k_x_inter_A_B_0, coords_A_3_c, coords_B_1_a);
        xs[16] = vs[16].v_exp0(m_d_x_inter_A_B_0, m_k_x_inter_A_B_0, coords_A_3_c, coords_B_2_a);
        xs[17] = vs[17].v_exp0(m_d_x_inter_A_B_0, m_k_x_inter_A_B_0, coords_A_3_c, coords_B_3_b);
        xs[18] = vs[18].v_exp0(m_d_x_inter_A_B_0, m_k_x_inter_A_B_0, coords_A_3_c, coords_B_4_b);
        xs[19] = vs[19].v_exp0(m_d_x_intra_A_B_1, m_k_x_intra_A_B_1, coords_A_3_c, coords_B_5_c);
        xs[20] = vs[20].v_exp0(m_d_x_intra_A_B_1, m_k_x_intra_A_B_1, coords_A_3_c, coords_B_6_c);
        xs[21] = vs[21].v_exp0(m_d_x_intra_B_B_1, m_k_x_intra_B_B_1, coords_B_1_a, coords_B_2_a);
        xs[22] = vs[22].v_exp0(m_d_x_inter_B_B_0, m_k_x_inter_B_B_0, coords_B_1_a, coords_B_3_b);
        xs[23] = vs[23].v_exp0(m_d_x_inter_B_B_0, m_k_x_inter_B_B_0, coords_B_1_a, coords_B_4_b);
        xs[24] = vs[24].v_exp0(m_d_x_inter_B_B_0, m_k_x_inter_B_B_0, coords_B_1_a, coords_B_5_c);
        xs[25] = vs[25].v_exp0(m_d_x_inter_B_B_0, m_k_x_inter_B_B_0, coords_B_1_a, coords_B_6_c);
        xs[26] = vs[26].v_exp0(m_d_x_inter_B_B_0, m_k_x_inter_B_B_0, coords_B_2_a, coords_B_3_b);
        xs[27] = vs[27].v_exp0(m_d_x_inter_B_B_0, m_k_x_inter_B_B_0, coords_B_2_a, coords_B_4_b);
        xs[28] = vs[28].v_exp0(m_d_x_inter_B_B_0, m_k_x_inter_B_B_0, coords_B_2_a, coords_B_5_c);
        xs[29] = vs[29].v_exp0(m_d_x_inter_B_B_0, m_k_x_inter_B_B_0, coords_B_2_a, coords_B_6_c);
        xs[30] = vs[30].v_exp0(m_d_x_intra_B_B_1, m_k_x_intra_B_B_1, coords_B_3_b, coords_B_4_b);
        xs[31] = vs[31].v_exp0(m_d_x_inter_B_B_0, m_k_x_inter_B_B_0, coords_B_3_b, coords_B_5_c);
        xs[32] = vs[32].v_exp0(m_d_x_inter_B_B_0, m_k_x_inter_B_B_0, coords_B_3_b, coords_B_6_c);
        xs[33] = vs[33].v_exp0(m_d_x_inter_B_B_0, m_k_x_inter_B_B_0, coords_B_4_b, coords_B_5_c);
        xs[34] = vs[34].v_exp0(m_d_x_inter_B_B_0, m_k_x_inter_B_B_0, coords_B_4_b, coords_B_6_c);
        xs[35] = vs[35].v_exp0(m_d_x_intra_B_B_1, m_k_x_intra_B_B_1, coords_B_5_c, coords_B_6_c);

        double gsw12 = 0.0;
        double sw12 = f_switch(d12r, gsw12);
        double gsw13 = 0.0;
        double sw13 = f_switch(d13r, gsw13);
        double gsw23 = 0.0;
        double sw23 = f_switch(d23r, gsw23);

        sw = sw12*sw13 + sw12*sw23 + sw13*sw23;

        energies[j] = my_poly.eval(xs,coefficients.data(),gxs);
        energies_sw[j] = energies[j]*sw;

        for (size_t i = 0; i < 36; i++) {
            gxs[i] *= sw;
        }

        vs[0].grads(gxs[0], coords_A_1_a_g, coords_A_2_b_g, coords_A_1_a, coords_A_2_b);
        vs[1].grads(gxs[1], coords_A_1_a_g, coords_A_3_c_g, coords_A_1_a, coords_A_3_c);
        vs[2].grads(gxs[2], coords_A_1_a_g, coords_B_1_a_g, coords_A_1_a, coords_B_1_a);
        vs[3].grads(gxs[3], coords_A_1_a_g, coords_B_2_a_g, coords_A_1_a, coords_B_2_a);
        vs[4].grads(gxs[4], coords_A_1_a_g, coords_B_3_b_g, coords_A_1_a, coords_B_3_b);
        vs[5].grads(gxs[5], coords_A_1_a_g, coords_B_4_b_g, coords_A_1_a, coords_B_4_b);
        vs[6].grads(gxs[6], coords_A_1_a_g, coords_B_5_c_g, coords_A_1_a, coords_B_5_c);
        vs[7].grads(gxs[7], coords_A_1_a_g, coords_B_6_c_g, coords_A_1_a, coords_B_6_c);
        vs[8].grads(gxs[8], coords_A_2_b_g, coords_A_3_c_g, coords_A_2_b, coords_A_3_c);
        vs[9].grads(gxs[9], coords_A_2_b_g, coords_B_1_a_g, coords_A_2_b, coords_B_1_a);
        vs[10].grads(gxs[10], coords_A_2_b_g, coords_B_2_a_g, coords_A_2_b, coords_B_2_a);
        vs[11].grads(gxs[11], coords_A_2_b_g, coords_B_3_b_g, coords_A_2_b, coords_B_3_b);
        vs[12].grads(gxs[12], coords_A_2_b_g, coords_B_4_b_g, coords_A_2_b, coords_B_4_b);
        vs[13].grads(gxs[13], coords_A_2_b_g, coords_B_5_c_g, coords_A_2_b, coords_B_5_c);
        vs[14].grads(gxs[14], coords_A_2_b_g, coords_B_6_c_g, coords_A_2_b, coords_B_6_c);
        vs[15].grads(gxs[15], coords_A_3_c_g, coords_B_1_a_g, coords_A_3_c, coords_B_1_a);
        vs[16].grads(gxs[16], coords_A_3_c_g, coords_B_2_a_g, coords_A_3_c, coords_B_2_a);
        vs[17].grads(gxs[17], coords_A_3_c_g, coords_B_3_b_g, coords_A_3_c, coords_B_3_b);
        vs[18].grads(gxs[18], coords_A_3_c_g, coords_B_4_b_g, coords_A_3_c, coords_B_4_b);
        vs[19].grads(gxs[19], coords_A_3_c_g, coords_B_5_c_g, coords_A_3_c, coords_B_5_c);
        vs[20].grads(gxs[20], coords_A_3_c_g, coords_B_6_c_g, coords_A_3_c, coords_B_6_c);
        vs[21].grads(gxs[21], coords_B_1_a_g, coords_B_2_a_g, coords_B_1_a, coords_B_2_a);
        vs[22].grads(gxs[22], coords_B_1_a_g, coords_B_3_b_g, coords_B_1_a, coords_B_3_b);
        vs[23].grads(gxs[23], coords_B_1_a_g, coords_B_4_b_g, coords_B_1_a, coords_B_4_b);
        vs[24].grads(gxs[24], coords_B_1_a_g, coords_B_5_c_g, coords_B_1_a, coords_B_5_c);
        vs[25].grads(gxs[25], coords_B_1_a_g, coords_B_6_c_g, coords_B_1_a, coords_B_6_c);
        vs[26].grads(gxs[26], coords_B_2_a_g, coords_B_3_b_g, coords_B_2_a, coords_B_3_b);
        vs[27].grads(gxs[27], coords_B_2_a_g, coords_B_4_b_g, coords_B_2_a, coords_B_4_b);
        vs[28].grads(gxs[28], coords_B_2_a_g, coords_B_5_c_g, coords_B_2_a, coords_B_5_c);
        vs[29].grads(gxs[29], coords_B_2_a_g, coords_B_6_c_g, coords_B_2_a, coords_B_6_c);
        vs[30].grads(gxs[30], coords_B_3_b_g, coords_B_4_b_g, coords_B_3_b, coords_B_4_b);
        vs[31].grads(gxs[31], coords_B_3_b_g, coords_B_5_c_g, coords_B_3_b, coords_B_5_c);
        vs[32].grads(gxs[32], coords_B_3_b_g, coords_B_6_c_g, coords_B_3_b, coords_B_6_c);
        vs[33].grads(gxs[33], coords_B_4_b_g, coords_B_5_c_g, coords_B_4_b, coords_B_5_c);
        vs[34].grads(gxs[34], coords_B_4_b_g, coords_B_6_c_g, coords_B_4_b, coords_B_6_c);
        vs[35].grads(gxs[35], coords_B_5_c_g, coords_B_6_c_g, coords_B_5_c, coords_B_6_c);
        gsw12 *= (1.0*sw13 + 1.0*sw23)*energies[j]/d12r;
        gsw13 *= (sw12*1.0 + 1.0*sw23)*energies[j]/d13r;
        gsw23 *= (sw12*1.0 + sw13*1.0)*energies[j]/d23r;


        for (size_t i = 0; i < 3; i++) {
            gradients[0 + i] += 0.0 + (gsw12*d12[i])+ (gsw13*d13[i]);
            gradients[9 + i] += 0.0 - (gsw12*d12[i])+ (gsw23*d23[i]);
            gradients[18 + i] += 0.0 - (gsw13*d13[i])- (gsw23*d23[i]);
        }


        for (size_t i = 0; i < 9; i++) {
            grad1[i + j*9] += gradients[0 + i];
        }


        for (size_t i = 0; i < 9; i++) {
            grad2[i + j*9] += gradients[9 + i];
        }


        for (size_t i = 0; i < 9; i++) {
            grad3[i + j*9] += gradients[18 + i];
        }

        
        if (virial != 0) {
        
            (*virial)[0] += -coords_A_1_a[0]*coords_A_1_a_g[0]
                        -coords_B_1_a[0]*coords_B_1_a_g[0]
                        -coords_B_2_a[0]*coords_B_2_a_g[0]
                        -coords_A_2_b[0]*coords_A_2_b_g[0]
                        -coords_B_3_b[0]*coords_B_3_b_g[0]
                        -coords_B_4_b[0]*coords_B_4_b_g[0]
                        -coords_A_3_c[0]*coords_A_3_c_g[0]
                        -coords_B_5_c[0]*coords_B_5_c_g[0]
                        -coords_B_6_c[0]*coords_B_6_c_g[0];

        
            (*virial)[1] += -coords_A_1_a[0]*coords_A_1_a_g[1]
                        -coords_B_1_a[0]*coords_B_1_a_g[1]
                        -coords_B_2_a[0]*coords_B_2_a_g[1]
                        -coords_A_2_b[0]*coords_A_2_b_g[1]
                        -coords_B_3_b[0]*coords_B_3_b_g[1]
                        -coords_B_4_b[0]*coords_B_4_b_g[1]
                        -coords_A_3_c[0]*coords_A_3_c_g[1]
                        -coords_B_5_c[0]*coords_B_5_c_g[1]
                        -coords_B_6_c[0]*coords_B_6_c_g[1];

        
            (*virial)[2] += -coords_A_1_a[0]*coords_A_1_a_g[2]
                        -coords_B_1_a[0]*coords_B_1_a_g[2]
                        -coords_B_2_a[0]*coords_B_2_a_g[2]
                        -coords_A_2_b[0]*coords_A_2_b_g[2]
                        -coords_B_3_b[0]*coords_B_3_b_g[2]
                        -coords_B_4_b[0]*coords_B_4_b_g[2]
                        -coords_A_3_c[0]*coords_A_3_c_g[2]
                        -coords_B_5_c[0]*coords_B_5_c_g[2]
                        -coords_B_6_c[0]*coords_B_6_c_g[2];

        
            (*virial)[4] += -coords_A_1_a[1]*coords_A_1_a_g[1]
                        -coords_B_1_a[1]*coords_B_1_a_g[1]
                        -coords_B_2_a[1]*coords_B_2_a_g[1]
                        -coords_A_2_b[1]*coords_A_2_b_g[1]
                        -coords_B_3_b[1]*coords_B_3_b_g[1]
                        -coords_B_4_b[1]*coords_B_4_b_g[1]
                        -coords_A_3_c[1]*coords_A_3_c_g[1]
                        -coords_B_5_c[1]*coords_B_5_c_g[1]
                        -coords_B_6_c[1]*coords_B_6_c_g[1];

        
            (*virial)[5] += -coords_A_1_a[1]*coords_A_1_a_g[2]
                        -coords_B_1_a[1]*coords_B_1_a_g[2]
                        -coords_B_2_a[1]*coords_B_2_a_g[2]
                        -coords_A_2_b[1]*coords_A_2_b_g[2]
                        -coords_B_3_b[1]*coords_B_3_b_g[2]
                        -coords_B_4_b[1]*coords_B_4_b_g[2]
                        -coords_A_3_c[1]*coords_A_3_c_g[2]
                        -coords_B_5_c[1]*coords_B_5_c_g[2]
                        -coords_B_6_c[1]*coords_B_6_c_g[2];

        
            (*virial)[8] += -coords_A_1_a[2]*coords_A_1_a_g[2]
                        -coords_B_1_a[2]*coords_B_1_a_g[2]
                        -coords_B_2_a[2]*coords_B_2_a_g[2]
                        -coords_A_2_b[2]*coords_A_2_b_g[2]
                        -coords_B_3_b[2]*coords_B_3_b_g[2]
                        -coords_B_4_b[2]*coords_B_4_b_g[2]
                        -coords_A_3_c[2]*coords_A_3_c_g[2]
                        -coords_B_5_c[2]*coords_B_5_c_g[2]
                        -coords_B_6_c[2]*coords_B_6_c_g[2];

            (*virial)[3] = (*virial)[1];
            (*virial)[6] = (*virial)[2];
            (*virial)[7] = (*virial)[5];


        }


    }

    double energy = 0.0;
    for (size_t i = 0; i < n; i++)
        energy += energies_sw[i];

    return energy;

}

//----------------------------------------------------------------------------//
} // namespace mbnrg_A1B2_A1B2_A1B2_deg4
